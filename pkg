#!/bin/sh

## CONFIGURATION #######################
# Please define your init system.
# Possible values are:
#   - runit
#   - systemd
INIT_SYSTEM="systemd"
# Please define your package manager.
# Possible values are:
#   - apt
#   - pacman
#   - xbps
#   - yum
PACKAGE_MANAGER="pacman"
########################################

usage () {
    if [ "$1" = "pkg" ]; then
        extra=" [package]"
    elif [ "$1" = "srv" ]; then
        extra=" service"
    fi
    printf "%b" "Usage: $1 $2$extra" | tr "\n" "|"
    printf "\n"
}

main () {
    script=$(basename -- "$0")
    if [ "$script" != "pkg" ] \
    && [ "$script" != "srv" ] \
    && [ "$script" != "sys" ]; then
        echo "This script should be called as pkg, srv or sys."
        exit 1
    fi

    if [ "$INIT_SYSTEM" != "runit"   ] \
    && [ "$INIT_SYSTEM" != "systemd" ]; then
        echo "Init system not supported."
        exit 2
    fi

    if [ "$PACKAGE_MANAGER" != "apt"    ] \
    && [ "$PACKAGE_MANAGER" != "pacman" ] \
    && [ "$PACKAGE_MANAGER" != "xbps"   ] \
    && [ "$PACKAGE_MANAGER" != "yum"    ]; then
        echo "Package manager not supported."
        exit 3
    fi

    if [ "$script" = "pkg" ]; then
        possible_commands="install\nremove\nsearch\nupdate"
    elif [ "$script" = "srv" ]; then
        possible_commands="start\nstop\nrestart\nenable\ndisable\nstatus"
    elif [ "$script" = "sys" ]; then
        possible_commands="standby\nhibernate\npoweroff\nreboot"
    fi

    if [ "$1" = "" ]; then
        usage "$script" "$possible_commands"
        exit 4
    fi

    cmd=$(printf "%b" "$possible_commands" | grep -E "^$1")
    if [ "$cmd" = "" ]; then
        usage "$script" "$possible_commands"
        exit 5
    fi

    if [ "$script" = "pkg" ]; then
        if [ "$cmd" = "update" ]; then
            eval "pkg_update_$PACKAGE_MANAGER"
        else
            shift
            eval "$script""_""$cmd""_""$PACKAGE_MANAGER" "$@"
        fi
    elif [ "$script" = "srv" ]; then
        shift
        eval "$script""_""$cmd""_""$INIT_SYSTEM" "$@"
    elif [ "$script" = "sys" ]; then
        eval "$script""_""$cmd""_""$INIT_SYSTEM"
    fi
}

pkg_install_apt () {
    echo "=> apt install $1"
    apt install "$1"
}

pkg_install_pacman () {
    echo "=> pacman -S $1"
    pacman -S "$1"
}

pkg_install_xbps () {
    echo "=> xbps-install -S $1"
    xbps-install -S "$1"
}

pkg_install_yum () {
    echo "=> yum install $1"
    yum install "$1"
}

pkg_remove_apt () {
    echo "=> apt remove $1"
    apt remove "$1"
}

pkg_remove_pacman () {
    echo "=> pacman -Rss $1"
    pacman -Rss "$1"
}

pkg_remove_xbps () {
    echo "=> xbps-remove -R $1"
    xbps-remove -R "$1"
}

pkg_remove_yum () {
    echo "=> yum remove $1"
    yum remove "$1"
}

pkg_search_apt () {
    echo "=> apt search $1"
    apt search "$1"
}

pkg_search_pacman () {
    echo "=> pacman -Ss $1"
    pacman -Ss "$1"
}

pkg_search_xbps () {
    echo "=> xbps-query -Rs $1"
    xbps-query -Rs "$1"
}

pkg_search_yum () {
    echo "=> yum search $1"
    yum search "$1"
}

pkg_update_apt () {
    echo "=> apt update"
    apt update
    echo "=> apt upgrade"
    apt upgrade
}

pkg_update_pacman () {
    echo "=> pacman -Syu"
    pacman -Syu
}

pkg_update_xbps () {
    echo "=> xbps-install -Su"
    xbps-install -Su
}

pkg_update_yum () {
    echo "=> yum update"
    yum update
}

srv_disable_runit () {
    echo "Not implemented."
    exit 6
}

srv_disable_systemd () {
    echo "=> systemctl disable $1"
    systemctl disable "$1"
}

srv_enable_runit () {
    echo "Not implemented."
    exit 6
}

srv_enable_systemd () {
    echo "=> systemctl enable $1"
    systemctl enable "$1"
}

srv_restart_runit () {
    echo "Not implemented."
    exit 6
}

srv_restart_systemd () {
    echo "=> systemctl restart $1"
    systemctl restart "$1"
}

srv_start_runit () {
    echo "Not implemented."
    exit 6
}

srv_start_systemd () {
    echo "=> systemctl start $1"
    systemctl start "$1"
}

srv_status_runit () {
    echo "Not implemented."
    exit 6
}

srv_status_systemd () {
    echo "=> systemctl status $1"
    systemctl status "$1"
}

srv_stop_runit () {
    echo "Not implemented."
    exit 6
}

srv_stop_systemd () {
    echo "=> systemctl stop $1"
    systemctl stop "$1"
}

sys_hibernate_runit () {
    echo "Not implemented."
    exit 6
}

sys_hibernate_systemd () {
    echo "=> systemctl hibernate"
    systemctl hibernate
}

sys_poweroff_runit () {
    echo "Not implemented."
    exit 6
}

sys_poweroff_runit () {
    echo "Not implemented."
    exit 6
}

sys_reboot_runit () {
    echo "Not implemented."
    exit 6
}

sys_reboot_systemd () {
    echo "=> systemctl reboot"
    systemctl reboot
}

sys_standby_runit () {
    echo "Not implemented."
    exit 6
}

sys_standby_systemd () {
    echo "=> systemctl suspend"
    systemctl suspend
}

main "$@"
