#!/bin/sh

## CONFIGURATION #######################
# Please define your init system.
# Possible values are:
#   - runit
#   - systemd
INIT_SYSTEM="runit"
# Please define your package manager.
# Possible values are:
#   - pacman
#   - xbps
#   - yum
PACKAGE_MANAGER="xbps"
########################################

run_command () {
    cmd=$(echo "$1" | sed "s/{}/$2/g")
    echo "=> $cmd"
    $cmd
}

main () {
    script=$(basename -- "$0")
    if [ "$script" != "pkg" ] && [ "$script" != "srv" ] && [ "$script" != "sys" ]; then
        echo "This script should be called as pkg, srv or sys."
        exit 1
    fi

    if [ "$INIT_SYSTEM" != "runit" ] && [ "$INIT_SYSTEM" != "systemd" ]; then
        echo "Init system not supported."
        exit 2
    fi

    if [ "$PACKAGE_MANAGER" != "pacman" ] && [ "$PACKAGE_MANAGER" != "xbps" ] && [ "$PACKAGE_MANAGER" != "yum" ]; then
        echo "Package manager not supported."
        exit 3
    fi

    if [ "$1" = "" ]; then
        if [ "$script" = "pkg" ]; then
            echo "Usage: $script search|install|remove|update [package]"
        elif [ "$script" = "srv" ]; then
            echo "Usage: $script start|stop|enable|disable service"
        elif [ "$script" = "sys" ]; then
            echo "Usage: $script standby|hibernate|poweroff|reboot"
        fi
        exit 4
    fi

    if [ "$script" = "pkg" ]; then
        possible_commands="install\nremove\nsearch\nupdate"
    elif [ "$script" = "srv" ]; then
        possible_commands="start\nstop\nenable\ndisable"
    elif [ "$script" = "sys" ]; then
        echo "Usage: $script standby|hibernate|poweroff|reboot"
    fi

    cmd=$(printf "%b" "$possible_commands" | grep -E "^$1")
    if [ "$(echo "$cmd" | wc -l)" != "1" ]; then
        echo "Didn't recognise command: $1"
        exit 5
    fi

    if [ "$script" = "pkg" ]; then
        if [ "$PACKAGE_MANAGER" = "pacman" ]; then
            CMD_INSTALL="pacman -S {}"
            CMD_SEARCH="pacman -Ss {}"
            CMD_UNINSTALL="pacman -Rss {}"
            CMD_UPDATE="pacman -Syu"
        elif [ "$PACKAGE_MANAGER" = "xbps" ]; then
            CMD_INSTALL="xbps-install {}"
            CMD_SEARCH="xbps-query -Rs {}"
            CMD_UNINSTALL="xbps-remove {}"
            CMD_UPDATE="xbps-install -Su"
        elif [ "$PACKAGE_MANAGER" = "yum" ]; then
            CMD_INSTALL="yum install {}"
            CMD_SEARCH="yum search {}"
            CMD_UNINSTALL="yum remove {}"
            CMD_UPDATE="yum update"
        fi

        if [ "$cmd" = "install" ]; then
            run_command "$CMD_INSTALL" "$2"
        elif [ "$cmd" = "search" ]; then
            run_command "$CMD_SEARCH" "$2"
        elif [ "$cmd" = "remove" ]; then
            run_command "$CMD_UNINSTALL" "$2"
        elif [ "$cmd" = "update" ]; then
            run_command "$CMD_UPDATE"
        else
            echo "Unknown command: $1"
            exit 6
        fi
    elif [ "$script" = "srv" ]; then
        if [ "$INIT_SYSTEM" = "runit" ]; then
            CMD_DISABLE="rm /var/service/{}"
            CMD_ENABLE="ln -s /etc/sv/{} /var/service/"
            CMD_START="sv start {}"
            CMD_STOP="sv stop {}"
        elif [ "$INIT_SYSTEM" = "systemd" ]; then
            CMD_DISABLE="systemctl disable {}"
            CMD_ENABLE="systemctl enable {}"
            CMD_START="systemctl start {}"
            CMD_STOP="systemctl stop {}"
        fi

        if [ "$cmd" = "disable" ]; then
            run_command "$CMD_DISABLE" "$2" 
        elif [ "$cmd" = "enable" ]; then
            run_command "$CMD_ENABLE" "$2" 
        elif [ "$cmd" = "start" ]; then
            run_command "$CMD_START" "$2" 
        elif [ "$cmd" = "stop" ]; then
            run_command "$CMD_STOP" "$2" 
        else
            echo "Unknown command: $1"
            exit 7
        fi
    elif [ "$script" = "sys" ]; then
        if [ "$INIT_SYSTEM" = "runit" ]; then
            CMD_POWEROFF="poweroff"
            CMD_REBOOT="reboot"
            CMD_STANDBY="zzz"
            CMD_HIBERNATE="ZZZ"
        elif [ "$INIT_SYSTEM" = "systemd" ]; then
            CMD_POWEROFF="systemctl poweroff"
            CMD_REBOOT="systemctl reboot"
            CMD_STANDBY="systemctl suspend"
            CMD_HIBERNATE="systemctl hibernate"
        fi

        if [ "$cmd" = "poweroff" ]; then
            run_command "$CMD_POWEROFF" 
        elif [ "$cmd" = "reboot" ]; then
            run_command "$CMD_REBOOT" 
        elif [ "$cmd" = "standby" ]; then
            run_command "$CMD_STANDBY" 
        elif [ "$cmd" = "hibernate" ]; then
            run_command "$CMD_HIBERNATE" 
        else
            echo "Unknown command: $1"
            exit 8
        fi
    fi
}

main $*
